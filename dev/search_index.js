var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = KATCP","category":"page"},{"location":"#KATCP","page":"Home","title":"KATCP","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for KATCP.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [KATCP]","category":"page"},{"location":"#Base.Vector-Union{Tuple{RawMessage}, Tuple{UInt8}} where UInt8","page":"Home","title":"Base.Vector","text":"Serialize a RawMessage into a vector of bytes (without trailing newline)\n\n\n\n\n\n","category":"method"},{"location":"#KATCP.KatcpAddress","page":"Home","title":"KATCP.KatcpAddress","text":"The IPv4/v6 address type from KATCP\n\n\n\n\n\n","category":"type"},{"location":"#KATCP.RawMessage","page":"Home","title":"KATCP.RawMessage","text":"The core message type of KATCP.\n\n\n\n\n\n","category":"type"},{"location":"#KATCP.RawMessage-Tuple{Vector{UInt8}}","page":"Home","title":"KATCP.RawMessage","text":"Parse an incoming vector of bytes (without trailing newline) into a RawMessage.\n\n\n\n\n\n","category":"method"},{"location":"#KATCP.parse-Tuple{Type, Base.CodeUnits}","page":"Home","title":"KATCP.parse","text":"Fallback method for parse if we came from a \"safe\" string\n\n\n\n\n\n","category":"method"},{"location":"#KATCP.read-Union{Tuple{T}, Tuple{Type{T}, RawMessage}} where T","page":"Home","title":"KATCP.read","text":"Read a RawMessage into a concrete message type T. You would implement T(msg) if you have a very custom struct.  Otherwise, you subtype AbstractKatcpMessage and the default methods will take over.\n\n\n\n\n\n","category":"method"}]
}
